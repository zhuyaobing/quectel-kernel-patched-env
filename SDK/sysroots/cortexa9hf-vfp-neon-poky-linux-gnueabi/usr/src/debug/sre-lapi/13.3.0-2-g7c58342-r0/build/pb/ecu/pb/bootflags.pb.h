// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bootflags.proto

#ifndef PROTOBUF_bootflags_2eproto__INCLUDED
#define PROTOBUF_bootflags_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ecu {
namespace lapi {
namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_bootflags_2eproto();
void protobuf_AssignDesc_bootflags_2eproto();
void protobuf_ShutdownFile_bootflags_2eproto();

class BootFlags;

enum BootFlags_BankSwitchCause {
  BootFlags_BankSwitchCause_CAUSE_UNINITIALIZED = 255,
  BootFlags_BankSwitchCause_CAUSE_NEVER_SWITCHED = 0,
  BootFlags_BankSwitchCause_CAUSE_UBOOT_UNKNOWN = 1,
  BootFlags_BankSwitchCause_CAUSE_UBOOT_POR = 2,
  BootFlags_BankSwitchCause_CAUSE_UBOOT_WD = 3,
  BootFlags_BankSwitchCause_CAUSE_UBOOT_WARM = 4,
  BootFlags_BankSwitchCause_CAUSE_CSP_SW_UPDATE = 5,
  BootFlags_BankSwitchCause_CAUSE_LAPI = 6,
  BootFlags_BankSwitchCause_CAUSE_LAPI_0 = 7,
  BootFlags_BankSwitchCause_CAUSE_LAPI_1 = 8,
  BootFlags_BankSwitchCause_CAUSE_LAPI_2 = 9,
  BootFlags_BankSwitchCause_CAUSE_LAPI_3 = 10,
  BootFlags_BankSwitchCause_CAUSE_LAPI_4 = 11,
  BootFlags_BankSwitchCause_CAUSE_LAPI_5 = 12,
  BootFlags_BankSwitchCause_CAUSE_LAPI_6 = 13,
  BootFlags_BankSwitchCause_CAUSE_LAPI_7 = 14,
  BootFlags_BankSwitchCause_CAUSE_LAPI_8 = 15,
  BootFlags_BankSwitchCause_CAUSE_LAPI_9 = 16,
  BootFlags_BankSwitchCause_CAUSE_UNKNOWN = 17
};
bool BootFlags_BankSwitchCause_IsValid(int value);
const BootFlags_BankSwitchCause BootFlags_BankSwitchCause_BankSwitchCause_MIN = BootFlags_BankSwitchCause_CAUSE_NEVER_SWITCHED;
const BootFlags_BankSwitchCause BootFlags_BankSwitchCause_BankSwitchCause_MAX = BootFlags_BankSwitchCause_CAUSE_UNINITIALIZED;
const int BootFlags_BankSwitchCause_BankSwitchCause_ARRAYSIZE = BootFlags_BankSwitchCause_BankSwitchCause_MAX + 1;

const ::google::protobuf::EnumDescriptor* BootFlags_BankSwitchCause_descriptor();
inline const ::std::string& BootFlags_BankSwitchCause_Name(BootFlags_BankSwitchCause value) {
  return ::google::protobuf::internal::NameOfEnum(
    BootFlags_BankSwitchCause_descriptor(), value);
}
inline bool BootFlags_BankSwitchCause_Parse(
    const ::std::string& name, BootFlags_BankSwitchCause* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BootFlags_BankSwitchCause>(
    BootFlags_BankSwitchCause_descriptor(), name, value);
}
enum BootFlags_BootBank {
  BootFlags_BootBank_BANK_UNINITIALIZED = 255,
  BootFlags_BootBank_BANK_0 = 0,
  BootFlags_BootBank_BANK_1 = 1
};
bool BootFlags_BootBank_IsValid(int value);
const BootFlags_BootBank BootFlags_BootBank_BootBank_MIN = BootFlags_BootBank_BANK_0;
const BootFlags_BootBank BootFlags_BootBank_BootBank_MAX = BootFlags_BootBank_BANK_UNINITIALIZED;
const int BootFlags_BootBank_BootBank_ARRAYSIZE = BootFlags_BootBank_BootBank_MAX + 1;

const ::google::protobuf::EnumDescriptor* BootFlags_BootBank_descriptor();
inline const ::std::string& BootFlags_BootBank_Name(BootFlags_BootBank value) {
  return ::google::protobuf::internal::NameOfEnum(
    BootFlags_BootBank_descriptor(), value);
}
inline bool BootFlags_BootBank_Parse(
    const ::std::string& name, BootFlags_BootBank* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BootFlags_BootBank>(
    BootFlags_BootBank_descriptor(), name, value);
}
enum BootFlags_BootMode {
  BootFlags_BootMode_MODE_UNINITIALIZED = 255,
  BootFlags_BootMode_MODE_NORMAL = 0,
  BootFlags_BootMode_MODE_PRODUCTION_TEST = 1
};
bool BootFlags_BootMode_IsValid(int value);
const BootFlags_BootMode BootFlags_BootMode_BootMode_MIN = BootFlags_BootMode_MODE_NORMAL;
const BootFlags_BootMode BootFlags_BootMode_BootMode_MAX = BootFlags_BootMode_MODE_UNINITIALIZED;
const int BootFlags_BootMode_BootMode_ARRAYSIZE = BootFlags_BootMode_BootMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* BootFlags_BootMode_descriptor();
inline const ::std::string& BootFlags_BootMode_Name(BootFlags_BootMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    BootFlags_BootMode_descriptor(), value);
}
inline bool BootFlags_BootMode_Parse(
    const ::std::string& name, BootFlags_BootMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BootFlags_BootMode>(
    BootFlags_BootMode_descriptor(), name, value);
}
// ===================================================================

class BootFlags : public ::google::protobuf::Message {
 public:
  BootFlags();
  virtual ~BootFlags();

  BootFlags(const BootFlags& from);

  inline BootFlags& operator=(const BootFlags& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BootFlags& default_instance();

  void Swap(BootFlags* other);

  // implements Message ----------------------------------------------

  BootFlags* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BootFlags& from);
  void MergeFrom(const BootFlags& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BootFlags_BankSwitchCause BankSwitchCause;
  static const BankSwitchCause CAUSE_UNINITIALIZED = BootFlags_BankSwitchCause_CAUSE_UNINITIALIZED;
  static const BankSwitchCause CAUSE_NEVER_SWITCHED = BootFlags_BankSwitchCause_CAUSE_NEVER_SWITCHED;
  static const BankSwitchCause CAUSE_UBOOT_UNKNOWN = BootFlags_BankSwitchCause_CAUSE_UBOOT_UNKNOWN;
  static const BankSwitchCause CAUSE_UBOOT_POR = BootFlags_BankSwitchCause_CAUSE_UBOOT_POR;
  static const BankSwitchCause CAUSE_UBOOT_WD = BootFlags_BankSwitchCause_CAUSE_UBOOT_WD;
  static const BankSwitchCause CAUSE_UBOOT_WARM = BootFlags_BankSwitchCause_CAUSE_UBOOT_WARM;
  static const BankSwitchCause CAUSE_CSP_SW_UPDATE = BootFlags_BankSwitchCause_CAUSE_CSP_SW_UPDATE;
  static const BankSwitchCause CAUSE_LAPI = BootFlags_BankSwitchCause_CAUSE_LAPI;
  static const BankSwitchCause CAUSE_LAPI_0 = BootFlags_BankSwitchCause_CAUSE_LAPI_0;
  static const BankSwitchCause CAUSE_LAPI_1 = BootFlags_BankSwitchCause_CAUSE_LAPI_1;
  static const BankSwitchCause CAUSE_LAPI_2 = BootFlags_BankSwitchCause_CAUSE_LAPI_2;
  static const BankSwitchCause CAUSE_LAPI_3 = BootFlags_BankSwitchCause_CAUSE_LAPI_3;
  static const BankSwitchCause CAUSE_LAPI_4 = BootFlags_BankSwitchCause_CAUSE_LAPI_4;
  static const BankSwitchCause CAUSE_LAPI_5 = BootFlags_BankSwitchCause_CAUSE_LAPI_5;
  static const BankSwitchCause CAUSE_LAPI_6 = BootFlags_BankSwitchCause_CAUSE_LAPI_6;
  static const BankSwitchCause CAUSE_LAPI_7 = BootFlags_BankSwitchCause_CAUSE_LAPI_7;
  static const BankSwitchCause CAUSE_LAPI_8 = BootFlags_BankSwitchCause_CAUSE_LAPI_8;
  static const BankSwitchCause CAUSE_LAPI_9 = BootFlags_BankSwitchCause_CAUSE_LAPI_9;
  static const BankSwitchCause CAUSE_UNKNOWN = BootFlags_BankSwitchCause_CAUSE_UNKNOWN;
  static inline bool BankSwitchCause_IsValid(int value) {
    return BootFlags_BankSwitchCause_IsValid(value);
  }
  static const BankSwitchCause BankSwitchCause_MIN =
    BootFlags_BankSwitchCause_BankSwitchCause_MIN;
  static const BankSwitchCause BankSwitchCause_MAX =
    BootFlags_BankSwitchCause_BankSwitchCause_MAX;
  static const int BankSwitchCause_ARRAYSIZE =
    BootFlags_BankSwitchCause_BankSwitchCause_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  BankSwitchCause_descriptor() {
    return BootFlags_BankSwitchCause_descriptor();
  }
  static inline const ::std::string& BankSwitchCause_Name(BankSwitchCause value) {
    return BootFlags_BankSwitchCause_Name(value);
  }
  static inline bool BankSwitchCause_Parse(const ::std::string& name,
      BankSwitchCause* value) {
    return BootFlags_BankSwitchCause_Parse(name, value);
  }

  typedef BootFlags_BootBank BootBank;
  static const BootBank BANK_UNINITIALIZED = BootFlags_BootBank_BANK_UNINITIALIZED;
  static const BootBank BANK_0 = BootFlags_BootBank_BANK_0;
  static const BootBank BANK_1 = BootFlags_BootBank_BANK_1;
  static inline bool BootBank_IsValid(int value) {
    return BootFlags_BootBank_IsValid(value);
  }
  static const BootBank BootBank_MIN =
    BootFlags_BootBank_BootBank_MIN;
  static const BootBank BootBank_MAX =
    BootFlags_BootBank_BootBank_MAX;
  static const int BootBank_ARRAYSIZE =
    BootFlags_BootBank_BootBank_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  BootBank_descriptor() {
    return BootFlags_BootBank_descriptor();
  }
  static inline const ::std::string& BootBank_Name(BootBank value) {
    return BootFlags_BootBank_Name(value);
  }
  static inline bool BootBank_Parse(const ::std::string& name,
      BootBank* value) {
    return BootFlags_BootBank_Parse(name, value);
  }

  typedef BootFlags_BootMode BootMode;
  static const BootMode MODE_UNINITIALIZED = BootFlags_BootMode_MODE_UNINITIALIZED;
  static const BootMode MODE_NORMAL = BootFlags_BootMode_MODE_NORMAL;
  static const BootMode MODE_PRODUCTION_TEST = BootFlags_BootMode_MODE_PRODUCTION_TEST;
  static inline bool BootMode_IsValid(int value) {
    return BootFlags_BootMode_IsValid(value);
  }
  static const BootMode BootMode_MIN =
    BootFlags_BootMode_BootMode_MIN;
  static const BootMode BootMode_MAX =
    BootFlags_BootMode_BootMode_MAX;
  static const int BootMode_ARRAYSIZE =
    BootFlags_BootMode_BootMode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  BootMode_descriptor() {
    return BootFlags_BootMode_descriptor();
  }
  static inline const ::std::string& BootMode_Name(BootMode value) {
    return BootFlags_BootMode_Name(value);
  }
  static inline bool BootMode_Parse(const ::std::string& name,
      BootMode* value) {
    return BootFlags_BootMode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .ecu.lapi.pb.BootFlags.BootBank current_bank = 1;
  inline bool has_current_bank() const;
  inline void clear_current_bank();
  static const int kCurrentBankFieldNumber = 1;
  inline ::ecu::lapi::pb::BootFlags_BootBank current_bank() const;
  inline void set_current_bank(::ecu::lapi::pb::BootFlags_BootBank value);

  // optional .ecu.lapi.pb.BootFlags.BootBank boot_bank = 2;
  inline bool has_boot_bank() const;
  inline void clear_boot_bank();
  static const int kBootBankFieldNumber = 2;
  inline ::ecu::lapi::pb::BootFlags_BootBank boot_bank() const;
  inline void set_boot_bank(::ecu::lapi::pb::BootFlags_BootBank value);

  // optional bool valid_bank0 = 3;
  inline bool has_valid_bank0() const;
  inline void clear_valid_bank0();
  static const int kValidBank0FieldNumber = 3;
  inline bool valid_bank0() const;
  inline void set_valid_bank0(bool value);

  // optional bool valid_bank1 = 4;
  inline bool has_valid_bank1() const;
  inline void clear_valid_bank1();
  static const int kValidBank1FieldNumber = 4;
  inline bool valid_bank1() const;
  inline void set_valid_bank1(bool value);

  // optional uint32 boot_counter = 5;
  inline bool has_boot_counter() const;
  inline void clear_boot_counter();
  static const int kBootCounterFieldNumber = 5;
  inline ::google::protobuf::uint32 boot_counter() const;
  inline void set_boot_counter(::google::protobuf::uint32 value);

  // optional .ecu.lapi.pb.BootFlags.BankSwitchCause bank_switch_cause = 6;
  inline bool has_bank_switch_cause() const;
  inline void clear_bank_switch_cause();
  static const int kBankSwitchCauseFieldNumber = 6;
  inline ::ecu::lapi::pb::BootFlags_BankSwitchCause bank_switch_cause() const;
  inline void set_bank_switch_cause(::ecu::lapi::pb::BootFlags_BankSwitchCause value);

  // optional .ecu.lapi.pb.BootFlags.BootMode boot_mode = 7;
  inline bool has_boot_mode() const;
  inline void clear_boot_mode();
  static const int kBootModeFieldNumber = 7;
  inline ::ecu::lapi::pb::BootFlags_BootMode boot_mode() const;
  inline void set_boot_mode(::ecu::lapi::pb::BootFlags_BootMode value);

  // @@protoc_insertion_point(class_scope:ecu.lapi.pb.BootFlags)
 private:
  inline void set_has_current_bank();
  inline void clear_has_current_bank();
  inline void set_has_boot_bank();
  inline void clear_has_boot_bank();
  inline void set_has_valid_bank0();
  inline void clear_has_valid_bank0();
  inline void set_has_valid_bank1();
  inline void clear_has_valid_bank1();
  inline void set_has_boot_counter();
  inline void clear_has_boot_counter();
  inline void set_has_bank_switch_cause();
  inline void clear_has_bank_switch_cause();
  inline void set_has_boot_mode();
  inline void clear_has_boot_mode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int current_bank_;
  int boot_bank_;
  bool valid_bank0_;
  bool valid_bank1_;
  ::google::protobuf::uint32 boot_counter_;
  int bank_switch_cause_;
  int boot_mode_;
  friend void  protobuf_AddDesc_bootflags_2eproto();
  friend void protobuf_AssignDesc_bootflags_2eproto();
  friend void protobuf_ShutdownFile_bootflags_2eproto();

  void InitAsDefaultInstance();
  static BootFlags* default_instance_;
};
// ===================================================================


// ===================================================================

// BootFlags

// optional .ecu.lapi.pb.BootFlags.BootBank current_bank = 1;
inline bool BootFlags::has_current_bank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BootFlags::set_has_current_bank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BootFlags::clear_has_current_bank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BootFlags::clear_current_bank() {
  current_bank_ = 255;
  clear_has_current_bank();
}
inline ::ecu::lapi::pb::BootFlags_BootBank BootFlags::current_bank() const {
  // @@protoc_insertion_point(field_get:ecu.lapi.pb.BootFlags.current_bank)
  return static_cast< ::ecu::lapi::pb::BootFlags_BootBank >(current_bank_);
}
inline void BootFlags::set_current_bank(::ecu::lapi::pb::BootFlags_BootBank value) {
  assert(::ecu::lapi::pb::BootFlags_BootBank_IsValid(value));
  set_has_current_bank();
  current_bank_ = value;
  // @@protoc_insertion_point(field_set:ecu.lapi.pb.BootFlags.current_bank)
}

// optional .ecu.lapi.pb.BootFlags.BootBank boot_bank = 2;
inline bool BootFlags::has_boot_bank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BootFlags::set_has_boot_bank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BootFlags::clear_has_boot_bank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BootFlags::clear_boot_bank() {
  boot_bank_ = 255;
  clear_has_boot_bank();
}
inline ::ecu::lapi::pb::BootFlags_BootBank BootFlags::boot_bank() const {
  // @@protoc_insertion_point(field_get:ecu.lapi.pb.BootFlags.boot_bank)
  return static_cast< ::ecu::lapi::pb::BootFlags_BootBank >(boot_bank_);
}
inline void BootFlags::set_boot_bank(::ecu::lapi::pb::BootFlags_BootBank value) {
  assert(::ecu::lapi::pb::BootFlags_BootBank_IsValid(value));
  set_has_boot_bank();
  boot_bank_ = value;
  // @@protoc_insertion_point(field_set:ecu.lapi.pb.BootFlags.boot_bank)
}

// optional bool valid_bank0 = 3;
inline bool BootFlags::has_valid_bank0() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BootFlags::set_has_valid_bank0() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BootFlags::clear_has_valid_bank0() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BootFlags::clear_valid_bank0() {
  valid_bank0_ = false;
  clear_has_valid_bank0();
}
inline bool BootFlags::valid_bank0() const {
  // @@protoc_insertion_point(field_get:ecu.lapi.pb.BootFlags.valid_bank0)
  return valid_bank0_;
}
inline void BootFlags::set_valid_bank0(bool value) {
  set_has_valid_bank0();
  valid_bank0_ = value;
  // @@protoc_insertion_point(field_set:ecu.lapi.pb.BootFlags.valid_bank0)
}

// optional bool valid_bank1 = 4;
inline bool BootFlags::has_valid_bank1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BootFlags::set_has_valid_bank1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BootFlags::clear_has_valid_bank1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BootFlags::clear_valid_bank1() {
  valid_bank1_ = false;
  clear_has_valid_bank1();
}
inline bool BootFlags::valid_bank1() const {
  // @@protoc_insertion_point(field_get:ecu.lapi.pb.BootFlags.valid_bank1)
  return valid_bank1_;
}
inline void BootFlags::set_valid_bank1(bool value) {
  set_has_valid_bank1();
  valid_bank1_ = value;
  // @@protoc_insertion_point(field_set:ecu.lapi.pb.BootFlags.valid_bank1)
}

// optional uint32 boot_counter = 5;
inline bool BootFlags::has_boot_counter() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BootFlags::set_has_boot_counter() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BootFlags::clear_has_boot_counter() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BootFlags::clear_boot_counter() {
  boot_counter_ = 0u;
  clear_has_boot_counter();
}
inline ::google::protobuf::uint32 BootFlags::boot_counter() const {
  // @@protoc_insertion_point(field_get:ecu.lapi.pb.BootFlags.boot_counter)
  return boot_counter_;
}
inline void BootFlags::set_boot_counter(::google::protobuf::uint32 value) {
  set_has_boot_counter();
  boot_counter_ = value;
  // @@protoc_insertion_point(field_set:ecu.lapi.pb.BootFlags.boot_counter)
}

// optional .ecu.lapi.pb.BootFlags.BankSwitchCause bank_switch_cause = 6;
inline bool BootFlags::has_bank_switch_cause() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BootFlags::set_has_bank_switch_cause() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BootFlags::clear_has_bank_switch_cause() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BootFlags::clear_bank_switch_cause() {
  bank_switch_cause_ = 255;
  clear_has_bank_switch_cause();
}
inline ::ecu::lapi::pb::BootFlags_BankSwitchCause BootFlags::bank_switch_cause() const {
  // @@protoc_insertion_point(field_get:ecu.lapi.pb.BootFlags.bank_switch_cause)
  return static_cast< ::ecu::lapi::pb::BootFlags_BankSwitchCause >(bank_switch_cause_);
}
inline void BootFlags::set_bank_switch_cause(::ecu::lapi::pb::BootFlags_BankSwitchCause value) {
  assert(::ecu::lapi::pb::BootFlags_BankSwitchCause_IsValid(value));
  set_has_bank_switch_cause();
  bank_switch_cause_ = value;
  // @@protoc_insertion_point(field_set:ecu.lapi.pb.BootFlags.bank_switch_cause)
}

// optional .ecu.lapi.pb.BootFlags.BootMode boot_mode = 7;
inline bool BootFlags::has_boot_mode() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BootFlags::set_has_boot_mode() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BootFlags::clear_has_boot_mode() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BootFlags::clear_boot_mode() {
  boot_mode_ = 255;
  clear_has_boot_mode();
}
inline ::ecu::lapi::pb::BootFlags_BootMode BootFlags::boot_mode() const {
  // @@protoc_insertion_point(field_get:ecu.lapi.pb.BootFlags.boot_mode)
  return static_cast< ::ecu::lapi::pb::BootFlags_BootMode >(boot_mode_);
}
inline void BootFlags::set_boot_mode(::ecu::lapi::pb::BootFlags_BootMode value) {
  assert(::ecu::lapi::pb::BootFlags_BootMode_IsValid(value));
  set_has_boot_mode();
  boot_mode_ = value;
  // @@protoc_insertion_point(field_set:ecu.lapi.pb.BootFlags.boot_mode)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace lapi
}  // namespace ecu

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ecu::lapi::pb::BootFlags_BankSwitchCause> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ecu::lapi::pb::BootFlags_BankSwitchCause>() {
  return ::ecu::lapi::pb::BootFlags_BankSwitchCause_descriptor();
}
template <> struct is_proto_enum< ::ecu::lapi::pb::BootFlags_BootBank> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ecu::lapi::pb::BootFlags_BootBank>() {
  return ::ecu::lapi::pb::BootFlags_BootBank_descriptor();
}
template <> struct is_proto_enum< ::ecu::lapi::pb::BootFlags_BootMode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ecu::lapi::pb::BootFlags_BootMode>() {
  return ::ecu::lapi::pb::BootFlags_BootMode_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_bootflags_2eproto__INCLUDED
