// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: variables.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "variables.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ecu {
namespace lapi {
namespace pb {

namespace {

const ::google::protobuf::Descriptor* EcuVariable_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EcuVariable_reflection_ = NULL;
const ::google::protobuf::Descriptor* EcuVariableReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EcuVariableReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* SystemParameterEntry_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SystemParameterEntry_reflection_ = NULL;
const ::google::protobuf::Descriptor* SystemParameterList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SystemParameterList_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_variables_2eproto() {
  protobuf_AddDesc_variables_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "variables.proto");
  GOOGLE_CHECK(file != NULL);
  EcuVariable_descriptor_ = file->message_type(0);
  static const int EcuVariable_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EcuVariable, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EcuVariable, timestamp_),
  };
  EcuVariable_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EcuVariable_descriptor_,
      EcuVariable::default_instance_,
      EcuVariable_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EcuVariable, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EcuVariable, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EcuVariable));
  EcuVariableReq_descriptor_ = file->message_type(1);
  static const int EcuVariableReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EcuVariableReq, variables_),
  };
  EcuVariableReq_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EcuVariableReq_descriptor_,
      EcuVariableReq::default_instance_,
      EcuVariableReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EcuVariableReq, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EcuVariableReq, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EcuVariableReq));
  SystemParameterEntry_descriptor_ = file->message_type(2);
  static const int SystemParameterEntry_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemParameterEntry, otaid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemParameterEntry, did_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemParameterEntry, xcpid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemParameterEntry, content_),
  };
  SystemParameterEntry_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SystemParameterEntry_descriptor_,
      SystemParameterEntry::default_instance_,
      SystemParameterEntry_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemParameterEntry, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemParameterEntry, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SystemParameterEntry));
  SystemParameterList_descriptor_ = file->message_type(3);
  static const int SystemParameterList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemParameterList, entries_),
  };
  SystemParameterList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SystemParameterList_descriptor_,
      SystemParameterList::default_instance_,
      SystemParameterList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemParameterList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemParameterList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SystemParameterList));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_variables_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EcuVariable_descriptor_, &EcuVariable::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EcuVariableReq_descriptor_, &EcuVariableReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SystemParameterEntry_descriptor_, &SystemParameterEntry::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SystemParameterList_descriptor_, &SystemParameterList::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_variables_2eproto() {
  delete EcuVariable::default_instance_;
  delete EcuVariable_reflection_;
  delete EcuVariableReq::default_instance_;
  delete EcuVariableReq_reflection_;
  delete SystemParameterEntry::default_instance_;
  delete SystemParameterEntry_reflection_;
  delete SystemParameterList::default_instance_;
  delete SystemParameterList_reflection_;
}

void protobuf_AddDesc_variables_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017variables.proto\022\013ecu.lapi.pb\"/\n\013EcuVar"
    "iable\022\r\n\005value\030\001 \001(\t\022\021\n\ttimestamp\030\002 \001(\004\""
    "#\n\016EcuVariableReq\022\021\n\tvariables\030\001 \003(\t\"[\n\024"
    "SystemParameterEntry\022\020\n\005otaid\030\001 \001(\r:\0010\022\016"
    "\n\003did\030\002 \001(\r:\0010\022\020\n\005xcpid\030\003 \001(\r:\0010\022\017\n\007cont"
    "ent\030\004 \001(\014\"I\n\023SystemParameterList\0222\n\007entr"
    "ies\030\001 \003(\0132!.ecu.lapi.pb.SystemParameterE"
    "ntry", 284);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "variables.proto", &protobuf_RegisterTypes);
  EcuVariable::default_instance_ = new EcuVariable();
  EcuVariableReq::default_instance_ = new EcuVariableReq();
  SystemParameterEntry::default_instance_ = new SystemParameterEntry();
  SystemParameterList::default_instance_ = new SystemParameterList();
  EcuVariable::default_instance_->InitAsDefaultInstance();
  EcuVariableReq::default_instance_->InitAsDefaultInstance();
  SystemParameterEntry::default_instance_->InitAsDefaultInstance();
  SystemParameterList::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_variables_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_variables_2eproto {
  StaticDescriptorInitializer_variables_2eproto() {
    protobuf_AddDesc_variables_2eproto();
  }
} static_descriptor_initializer_variables_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int EcuVariable::kValueFieldNumber;
const int EcuVariable::kTimestampFieldNumber;
#endif  // !_MSC_VER

EcuVariable::EcuVariable()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ecu.lapi.pb.EcuVariable)
}

void EcuVariable::InitAsDefaultInstance() {
}

EcuVariable::EcuVariable(const EcuVariable& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ecu.lapi.pb.EcuVariable)
}

void EcuVariable::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EcuVariable::~EcuVariable() {
  // @@protoc_insertion_point(destructor:ecu.lapi.pb.EcuVariable)
  SharedDtor();
}

void EcuVariable::SharedDtor() {
  if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete value_;
  }
  if (this != default_instance_) {
  }
}

void EcuVariable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EcuVariable::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EcuVariable_descriptor_;
}

const EcuVariable& EcuVariable::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_variables_2eproto();
  return *default_instance_;
}

EcuVariable* EcuVariable::default_instance_ = NULL;

EcuVariable* EcuVariable::New() const {
  return new EcuVariable;
}

void EcuVariable::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_value()) {
      if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        value_->clear();
      }
    }
    timestamp_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EcuVariable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ecu.lapi.pb.EcuVariable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string value = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "value");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_timestamp;
        break;
      }

      // optional uint64 timestamp = 2;
      case 2: {
        if (tag == 16) {
         parse_timestamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
          set_has_timestamp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ecu.lapi.pb.EcuVariable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ecu.lapi.pb.EcuVariable)
  return false;
#undef DO_
}

void EcuVariable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ecu.lapi.pb.EcuVariable)
  // optional string value = 1;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->value(), output);
  }

  // optional uint64 timestamp = 2;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->timestamp(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ecu.lapi.pb.EcuVariable)
}

::google::protobuf::uint8* EcuVariable::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ecu.lapi.pb.EcuVariable)
  // optional string value = 1;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->value(), target);
  }

  // optional uint64 timestamp = 2;
  if (has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->timestamp(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ecu.lapi.pb.EcuVariable)
  return target;
}

int EcuVariable::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string value = 1;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

    // optional uint64 timestamp = 2;
    if (has_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->timestamp());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EcuVariable::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EcuVariable* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EcuVariable*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EcuVariable::MergeFrom(const EcuVariable& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_value()) {
      set_value(from.value());
    }
    if (from.has_timestamp()) {
      set_timestamp(from.timestamp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EcuVariable::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EcuVariable::CopyFrom(const EcuVariable& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EcuVariable::IsInitialized() const {

  return true;
}

void EcuVariable::Swap(EcuVariable* other) {
  if (other != this) {
    std::swap(value_, other->value_);
    std::swap(timestamp_, other->timestamp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EcuVariable::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EcuVariable_descriptor_;
  metadata.reflection = EcuVariable_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EcuVariableReq::kVariablesFieldNumber;
#endif  // !_MSC_VER

EcuVariableReq::EcuVariableReq()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ecu.lapi.pb.EcuVariableReq)
}

void EcuVariableReq::InitAsDefaultInstance() {
}

EcuVariableReq::EcuVariableReq(const EcuVariableReq& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ecu.lapi.pb.EcuVariableReq)
}

void EcuVariableReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EcuVariableReq::~EcuVariableReq() {
  // @@protoc_insertion_point(destructor:ecu.lapi.pb.EcuVariableReq)
  SharedDtor();
}

void EcuVariableReq::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EcuVariableReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EcuVariableReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EcuVariableReq_descriptor_;
}

const EcuVariableReq& EcuVariableReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_variables_2eproto();
  return *default_instance_;
}

EcuVariableReq* EcuVariableReq::default_instance_ = NULL;

EcuVariableReq* EcuVariableReq::New() const {
  return new EcuVariableReq;
}

void EcuVariableReq::Clear() {
  variables_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EcuVariableReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ecu.lapi.pb.EcuVariableReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string variables = 1;
      case 1: {
        if (tag == 10) {
         parse_variables:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_variables()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->variables(this->variables_size() - 1).data(),
            this->variables(this->variables_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "variables");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_variables;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ecu.lapi.pb.EcuVariableReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ecu.lapi.pb.EcuVariableReq)
  return false;
#undef DO_
}

void EcuVariableReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ecu.lapi.pb.EcuVariableReq)
  // repeated string variables = 1;
  for (int i = 0; i < this->variables_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->variables(i).data(), this->variables(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "variables");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->variables(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ecu.lapi.pb.EcuVariableReq)
}

::google::protobuf::uint8* EcuVariableReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ecu.lapi.pb.EcuVariableReq)
  // repeated string variables = 1;
  for (int i = 0; i < this->variables_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->variables(i).data(), this->variables(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "variables");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->variables(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ecu.lapi.pb.EcuVariableReq)
  return target;
}

int EcuVariableReq::ByteSize() const {
  int total_size = 0;

  // repeated string variables = 1;
  total_size += 1 * this->variables_size();
  for (int i = 0; i < this->variables_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->variables(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EcuVariableReq::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EcuVariableReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EcuVariableReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EcuVariableReq::MergeFrom(const EcuVariableReq& from) {
  GOOGLE_CHECK_NE(&from, this);
  variables_.MergeFrom(from.variables_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EcuVariableReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EcuVariableReq::CopyFrom(const EcuVariableReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EcuVariableReq::IsInitialized() const {

  return true;
}

void EcuVariableReq::Swap(EcuVariableReq* other) {
  if (other != this) {
    variables_.Swap(&other->variables_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EcuVariableReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EcuVariableReq_descriptor_;
  metadata.reflection = EcuVariableReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SystemParameterEntry::kOtaidFieldNumber;
const int SystemParameterEntry::kDidFieldNumber;
const int SystemParameterEntry::kXcpidFieldNumber;
const int SystemParameterEntry::kContentFieldNumber;
#endif  // !_MSC_VER

SystemParameterEntry::SystemParameterEntry()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ecu.lapi.pb.SystemParameterEntry)
}

void SystemParameterEntry::InitAsDefaultInstance() {
}

SystemParameterEntry::SystemParameterEntry(const SystemParameterEntry& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ecu.lapi.pb.SystemParameterEntry)
}

void SystemParameterEntry::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  otaid_ = 0u;
  did_ = 0u;
  xcpid_ = 0u;
  content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SystemParameterEntry::~SystemParameterEntry() {
  // @@protoc_insertion_point(destructor:ecu.lapi.pb.SystemParameterEntry)
  SharedDtor();
}

void SystemParameterEntry::SharedDtor() {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (this != default_instance_) {
  }
}

void SystemParameterEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SystemParameterEntry::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SystemParameterEntry_descriptor_;
}

const SystemParameterEntry& SystemParameterEntry::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_variables_2eproto();
  return *default_instance_;
}

SystemParameterEntry* SystemParameterEntry::default_instance_ = NULL;

SystemParameterEntry* SystemParameterEntry::New() const {
  return new SystemParameterEntry;
}

void SystemParameterEntry::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<SystemParameterEntry*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(otaid_, did_);
    xcpid_ = 0u;
    if (has_content()) {
      if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        content_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SystemParameterEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ecu.lapi.pb.SystemParameterEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 otaid = 1 [default = 0];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &otaid_)));
          set_has_otaid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_did;
        break;
      }

      // optional uint32 did = 2 [default = 0];
      case 2: {
        if (tag == 16) {
         parse_did:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &did_)));
          set_has_did();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_xcpid;
        break;
      }

      // optional uint32 xcpid = 3 [default = 0];
      case 3: {
        if (tag == 24) {
         parse_xcpid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &xcpid_)));
          set_has_xcpid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_content;
        break;
      }

      // optional bytes content = 4;
      case 4: {
        if (tag == 34) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ecu.lapi.pb.SystemParameterEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ecu.lapi.pb.SystemParameterEntry)
  return false;
#undef DO_
}

void SystemParameterEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ecu.lapi.pb.SystemParameterEntry)
  // optional uint32 otaid = 1 [default = 0];
  if (has_otaid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->otaid(), output);
  }

  // optional uint32 did = 2 [default = 0];
  if (has_did()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->did(), output);
  }

  // optional uint32 xcpid = 3 [default = 0];
  if (has_xcpid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->xcpid(), output);
  }

  // optional bytes content = 4;
  if (has_content()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->content(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ecu.lapi.pb.SystemParameterEntry)
}

::google::protobuf::uint8* SystemParameterEntry::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ecu.lapi.pb.SystemParameterEntry)
  // optional uint32 otaid = 1 [default = 0];
  if (has_otaid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->otaid(), target);
  }

  // optional uint32 did = 2 [default = 0];
  if (has_did()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->did(), target);
  }

  // optional uint32 xcpid = 3 [default = 0];
  if (has_xcpid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->xcpid(), target);
  }

  // optional bytes content = 4;
  if (has_content()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->content(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ecu.lapi.pb.SystemParameterEntry)
  return target;
}

int SystemParameterEntry::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 otaid = 1 [default = 0];
    if (has_otaid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->otaid());
    }

    // optional uint32 did = 2 [default = 0];
    if (has_did()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->did());
    }

    // optional uint32 xcpid = 3 [default = 0];
    if (has_xcpid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->xcpid());
    }

    // optional bytes content = 4;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->content());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SystemParameterEntry::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SystemParameterEntry* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SystemParameterEntry*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SystemParameterEntry::MergeFrom(const SystemParameterEntry& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_otaid()) {
      set_otaid(from.otaid());
    }
    if (from.has_did()) {
      set_did(from.did());
    }
    if (from.has_xcpid()) {
      set_xcpid(from.xcpid());
    }
    if (from.has_content()) {
      set_content(from.content());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SystemParameterEntry::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemParameterEntry::CopyFrom(const SystemParameterEntry& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemParameterEntry::IsInitialized() const {

  return true;
}

void SystemParameterEntry::Swap(SystemParameterEntry* other) {
  if (other != this) {
    std::swap(otaid_, other->otaid_);
    std::swap(did_, other->did_);
    std::swap(xcpid_, other->xcpid_);
    std::swap(content_, other->content_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SystemParameterEntry::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SystemParameterEntry_descriptor_;
  metadata.reflection = SystemParameterEntry_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SystemParameterList::kEntriesFieldNumber;
#endif  // !_MSC_VER

SystemParameterList::SystemParameterList()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ecu.lapi.pb.SystemParameterList)
}

void SystemParameterList::InitAsDefaultInstance() {
}

SystemParameterList::SystemParameterList(const SystemParameterList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ecu.lapi.pb.SystemParameterList)
}

void SystemParameterList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SystemParameterList::~SystemParameterList() {
  // @@protoc_insertion_point(destructor:ecu.lapi.pb.SystemParameterList)
  SharedDtor();
}

void SystemParameterList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SystemParameterList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SystemParameterList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SystemParameterList_descriptor_;
}

const SystemParameterList& SystemParameterList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_variables_2eproto();
  return *default_instance_;
}

SystemParameterList* SystemParameterList::default_instance_ = NULL;

SystemParameterList* SystemParameterList::New() const {
  return new SystemParameterList;
}

void SystemParameterList::Clear() {
  entries_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SystemParameterList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ecu.lapi.pb.SystemParameterList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ecu.lapi.pb.SystemParameterEntry entries = 1;
      case 1: {
        if (tag == 10) {
         parse_entries:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_entries;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ecu.lapi.pb.SystemParameterList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ecu.lapi.pb.SystemParameterList)
  return false;
#undef DO_
}

void SystemParameterList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ecu.lapi.pb.SystemParameterList)
  // repeated .ecu.lapi.pb.SystemParameterEntry entries = 1;
  for (int i = 0; i < this->entries_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->entries(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ecu.lapi.pb.SystemParameterList)
}

::google::protobuf::uint8* SystemParameterList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ecu.lapi.pb.SystemParameterList)
  // repeated .ecu.lapi.pb.SystemParameterEntry entries = 1;
  for (int i = 0; i < this->entries_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->entries(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ecu.lapi.pb.SystemParameterList)
  return target;
}

int SystemParameterList::ByteSize() const {
  int total_size = 0;

  // repeated .ecu.lapi.pb.SystemParameterEntry entries = 1;
  total_size += 1 * this->entries_size();
  for (int i = 0; i < this->entries_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->entries(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SystemParameterList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SystemParameterList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SystemParameterList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SystemParameterList::MergeFrom(const SystemParameterList& from) {
  GOOGLE_CHECK_NE(&from, this);
  entries_.MergeFrom(from.entries_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SystemParameterList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemParameterList::CopyFrom(const SystemParameterList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemParameterList::IsInitialized() const {

  return true;
}

void SystemParameterList::Swap(SystemParameterList* other) {
  if (other != this) {
    entries_.Swap(&other->entries_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SystemParameterList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SystemParameterList_descriptor_;
  metadata.reflection = SystemParameterList_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace lapi
}  // namespace ecu

// @@protoc_insertion_point(global_scope)
