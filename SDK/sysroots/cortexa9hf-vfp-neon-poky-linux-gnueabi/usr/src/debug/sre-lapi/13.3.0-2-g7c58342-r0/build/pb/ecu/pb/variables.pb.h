// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: variables.proto

#ifndef PROTOBUF_variables_2eproto__INCLUDED
#define PROTOBUF_variables_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ecu {
namespace lapi {
namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_variables_2eproto();
void protobuf_AssignDesc_variables_2eproto();
void protobuf_ShutdownFile_variables_2eproto();

class EcuVariable;
class EcuVariableReq;
class SystemParameterEntry;
class SystemParameterList;

// ===================================================================

class EcuVariable : public ::google::protobuf::Message {
 public:
  EcuVariable();
  virtual ~EcuVariable();

  EcuVariable(const EcuVariable& from);

  inline EcuVariable& operator=(const EcuVariable& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EcuVariable& default_instance();

  void Swap(EcuVariable* other);

  // implements Message ----------------------------------------------

  EcuVariable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EcuVariable& from);
  void MergeFrom(const EcuVariable& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string value = 1;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 1;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const char* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  inline void set_allocated_value(::std::string* value);

  // optional uint64 timestamp = 2;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  inline ::google::protobuf::uint64 timestamp() const;
  inline void set_timestamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ecu.lapi.pb.EcuVariable)
 private:
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* value_;
  ::google::protobuf::uint64 timestamp_;
  friend void  protobuf_AddDesc_variables_2eproto();
  friend void protobuf_AssignDesc_variables_2eproto();
  friend void protobuf_ShutdownFile_variables_2eproto();

  void InitAsDefaultInstance();
  static EcuVariable* default_instance_;
};
// -------------------------------------------------------------------

class EcuVariableReq : public ::google::protobuf::Message {
 public:
  EcuVariableReq();
  virtual ~EcuVariableReq();

  EcuVariableReq(const EcuVariableReq& from);

  inline EcuVariableReq& operator=(const EcuVariableReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EcuVariableReq& default_instance();

  void Swap(EcuVariableReq* other);

  // implements Message ----------------------------------------------

  EcuVariableReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EcuVariableReq& from);
  void MergeFrom(const EcuVariableReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string variables = 1;
  inline int variables_size() const;
  inline void clear_variables();
  static const int kVariablesFieldNumber = 1;
  inline const ::std::string& variables(int index) const;
  inline ::std::string* mutable_variables(int index);
  inline void set_variables(int index, const ::std::string& value);
  inline void set_variables(int index, const char* value);
  inline void set_variables(int index, const char* value, size_t size);
  inline ::std::string* add_variables();
  inline void add_variables(const ::std::string& value);
  inline void add_variables(const char* value);
  inline void add_variables(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& variables() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_variables();

  // @@protoc_insertion_point(class_scope:ecu.lapi.pb.EcuVariableReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> variables_;
  friend void  protobuf_AddDesc_variables_2eproto();
  friend void protobuf_AssignDesc_variables_2eproto();
  friend void protobuf_ShutdownFile_variables_2eproto();

  void InitAsDefaultInstance();
  static EcuVariableReq* default_instance_;
};
// -------------------------------------------------------------------

class SystemParameterEntry : public ::google::protobuf::Message {
 public:
  SystemParameterEntry();
  virtual ~SystemParameterEntry();

  SystemParameterEntry(const SystemParameterEntry& from);

  inline SystemParameterEntry& operator=(const SystemParameterEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SystemParameterEntry& default_instance();

  void Swap(SystemParameterEntry* other);

  // implements Message ----------------------------------------------

  SystemParameterEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SystemParameterEntry& from);
  void MergeFrom(const SystemParameterEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 otaid = 1 [default = 0];
  inline bool has_otaid() const;
  inline void clear_otaid();
  static const int kOtaidFieldNumber = 1;
  inline ::google::protobuf::uint32 otaid() const;
  inline void set_otaid(::google::protobuf::uint32 value);

  // optional uint32 did = 2 [default = 0];
  inline bool has_did() const;
  inline void clear_did();
  static const int kDidFieldNumber = 2;
  inline ::google::protobuf::uint32 did() const;
  inline void set_did(::google::protobuf::uint32 value);

  // optional uint32 xcpid = 3 [default = 0];
  inline bool has_xcpid() const;
  inline void clear_xcpid();
  static const int kXcpidFieldNumber = 3;
  inline ::google::protobuf::uint32 xcpid() const;
  inline void set_xcpid(::google::protobuf::uint32 value);

  // optional bytes content = 4;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 4;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const void* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:ecu.lapi.pb.SystemParameterEntry)
 private:
  inline void set_has_otaid();
  inline void clear_has_otaid();
  inline void set_has_did();
  inline void clear_has_did();
  inline void set_has_xcpid();
  inline void clear_has_xcpid();
  inline void set_has_content();
  inline void clear_has_content();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 otaid_;
  ::google::protobuf::uint32 did_;
  ::std::string* content_;
  ::google::protobuf::uint32 xcpid_;
  friend void  protobuf_AddDesc_variables_2eproto();
  friend void protobuf_AssignDesc_variables_2eproto();
  friend void protobuf_ShutdownFile_variables_2eproto();

  void InitAsDefaultInstance();
  static SystemParameterEntry* default_instance_;
};
// -------------------------------------------------------------------

class SystemParameterList : public ::google::protobuf::Message {
 public:
  SystemParameterList();
  virtual ~SystemParameterList();

  SystemParameterList(const SystemParameterList& from);

  inline SystemParameterList& operator=(const SystemParameterList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SystemParameterList& default_instance();

  void Swap(SystemParameterList* other);

  // implements Message ----------------------------------------------

  SystemParameterList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SystemParameterList& from);
  void MergeFrom(const SystemParameterList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ecu.lapi.pb.SystemParameterEntry entries = 1;
  inline int entries_size() const;
  inline void clear_entries();
  static const int kEntriesFieldNumber = 1;
  inline const ::ecu::lapi::pb::SystemParameterEntry& entries(int index) const;
  inline ::ecu::lapi::pb::SystemParameterEntry* mutable_entries(int index);
  inline ::ecu::lapi::pb::SystemParameterEntry* add_entries();
  inline const ::google::protobuf::RepeatedPtrField< ::ecu::lapi::pb::SystemParameterEntry >&
      entries() const;
  inline ::google::protobuf::RepeatedPtrField< ::ecu::lapi::pb::SystemParameterEntry >*
      mutable_entries();

  // @@protoc_insertion_point(class_scope:ecu.lapi.pb.SystemParameterList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ecu::lapi::pb::SystemParameterEntry > entries_;
  friend void  protobuf_AddDesc_variables_2eproto();
  friend void protobuf_AssignDesc_variables_2eproto();
  friend void protobuf_ShutdownFile_variables_2eproto();

  void InitAsDefaultInstance();
  static SystemParameterList* default_instance_;
};
// ===================================================================


// ===================================================================

// EcuVariable

// optional string value = 1;
inline bool EcuVariable::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EcuVariable::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EcuVariable::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EcuVariable::clear_value() {
  if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& EcuVariable::value() const {
  // @@protoc_insertion_point(field_get:ecu.lapi.pb.EcuVariable.value)
  return *value_;
}
inline void EcuVariable::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  value_->assign(value);
  // @@protoc_insertion_point(field_set:ecu.lapi.pb.EcuVariable.value)
}
inline void EcuVariable::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  value_->assign(value);
  // @@protoc_insertion_point(field_set_char:ecu.lapi.pb.EcuVariable.value)
}
inline void EcuVariable::set_value(const char* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ecu.lapi.pb.EcuVariable.value)
}
inline ::std::string* EcuVariable::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ecu.lapi.pb.EcuVariable.value)
  return value_;
}
inline ::std::string* EcuVariable::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void EcuVariable::set_allocated_value(::std::string* value) {
  if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete value_;
  }
  if (value) {
    set_has_value();
    value_ = value;
  } else {
    clear_has_value();
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ecu.lapi.pb.EcuVariable.value)
}

// optional uint64 timestamp = 2;
inline bool EcuVariable::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EcuVariable::set_has_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EcuVariable::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EcuVariable::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::uint64 EcuVariable::timestamp() const {
  // @@protoc_insertion_point(field_get:ecu.lapi.pb.EcuVariable.timestamp)
  return timestamp_;
}
inline void EcuVariable::set_timestamp(::google::protobuf::uint64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:ecu.lapi.pb.EcuVariable.timestamp)
}

// -------------------------------------------------------------------

// EcuVariableReq

// repeated string variables = 1;
inline int EcuVariableReq::variables_size() const {
  return variables_.size();
}
inline void EcuVariableReq::clear_variables() {
  variables_.Clear();
}
inline const ::std::string& EcuVariableReq::variables(int index) const {
  // @@protoc_insertion_point(field_get:ecu.lapi.pb.EcuVariableReq.variables)
  return variables_.Get(index);
}
inline ::std::string* EcuVariableReq::mutable_variables(int index) {
  // @@protoc_insertion_point(field_mutable:ecu.lapi.pb.EcuVariableReq.variables)
  return variables_.Mutable(index);
}
inline void EcuVariableReq::set_variables(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ecu.lapi.pb.EcuVariableReq.variables)
  variables_.Mutable(index)->assign(value);
}
inline void EcuVariableReq::set_variables(int index, const char* value) {
  variables_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ecu.lapi.pb.EcuVariableReq.variables)
}
inline void EcuVariableReq::set_variables(int index, const char* value, size_t size) {
  variables_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ecu.lapi.pb.EcuVariableReq.variables)
}
inline ::std::string* EcuVariableReq::add_variables() {
  return variables_.Add();
}
inline void EcuVariableReq::add_variables(const ::std::string& value) {
  variables_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ecu.lapi.pb.EcuVariableReq.variables)
}
inline void EcuVariableReq::add_variables(const char* value) {
  variables_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ecu.lapi.pb.EcuVariableReq.variables)
}
inline void EcuVariableReq::add_variables(const char* value, size_t size) {
  variables_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ecu.lapi.pb.EcuVariableReq.variables)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
EcuVariableReq::variables() const {
  // @@protoc_insertion_point(field_list:ecu.lapi.pb.EcuVariableReq.variables)
  return variables_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
EcuVariableReq::mutable_variables() {
  // @@protoc_insertion_point(field_mutable_list:ecu.lapi.pb.EcuVariableReq.variables)
  return &variables_;
}

// -------------------------------------------------------------------

// SystemParameterEntry

// optional uint32 otaid = 1 [default = 0];
inline bool SystemParameterEntry::has_otaid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SystemParameterEntry::set_has_otaid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SystemParameterEntry::clear_has_otaid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SystemParameterEntry::clear_otaid() {
  otaid_ = 0u;
  clear_has_otaid();
}
inline ::google::protobuf::uint32 SystemParameterEntry::otaid() const {
  // @@protoc_insertion_point(field_get:ecu.lapi.pb.SystemParameterEntry.otaid)
  return otaid_;
}
inline void SystemParameterEntry::set_otaid(::google::protobuf::uint32 value) {
  set_has_otaid();
  otaid_ = value;
  // @@protoc_insertion_point(field_set:ecu.lapi.pb.SystemParameterEntry.otaid)
}

// optional uint32 did = 2 [default = 0];
inline bool SystemParameterEntry::has_did() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SystemParameterEntry::set_has_did() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SystemParameterEntry::clear_has_did() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SystemParameterEntry::clear_did() {
  did_ = 0u;
  clear_has_did();
}
inline ::google::protobuf::uint32 SystemParameterEntry::did() const {
  // @@protoc_insertion_point(field_get:ecu.lapi.pb.SystemParameterEntry.did)
  return did_;
}
inline void SystemParameterEntry::set_did(::google::protobuf::uint32 value) {
  set_has_did();
  did_ = value;
  // @@protoc_insertion_point(field_set:ecu.lapi.pb.SystemParameterEntry.did)
}

// optional uint32 xcpid = 3 [default = 0];
inline bool SystemParameterEntry::has_xcpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SystemParameterEntry::set_has_xcpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SystemParameterEntry::clear_has_xcpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SystemParameterEntry::clear_xcpid() {
  xcpid_ = 0u;
  clear_has_xcpid();
}
inline ::google::protobuf::uint32 SystemParameterEntry::xcpid() const {
  // @@protoc_insertion_point(field_get:ecu.lapi.pb.SystemParameterEntry.xcpid)
  return xcpid_;
}
inline void SystemParameterEntry::set_xcpid(::google::protobuf::uint32 value) {
  set_has_xcpid();
  xcpid_ = value;
  // @@protoc_insertion_point(field_set:ecu.lapi.pb.SystemParameterEntry.xcpid)
}

// optional bytes content = 4;
inline bool SystemParameterEntry::has_content() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SystemParameterEntry::set_has_content() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SystemParameterEntry::clear_has_content() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SystemParameterEntry::clear_content() {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& SystemParameterEntry::content() const {
  // @@protoc_insertion_point(field_get:ecu.lapi.pb.SystemParameterEntry.content)
  return *content_;
}
inline void SystemParameterEntry::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set:ecu.lapi.pb.SystemParameterEntry.content)
}
inline void SystemParameterEntry::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set_char:ecu.lapi.pb.SystemParameterEntry.content)
}
inline void SystemParameterEntry::set_content(const void* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ecu.lapi.pb.SystemParameterEntry.content)
}
inline ::std::string* SystemParameterEntry::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ecu.lapi.pb.SystemParameterEntry.content)
  return content_;
}
inline ::std::string* SystemParameterEntry::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SystemParameterEntry::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ecu.lapi.pb.SystemParameterEntry.content)
}

// -------------------------------------------------------------------

// SystemParameterList

// repeated .ecu.lapi.pb.SystemParameterEntry entries = 1;
inline int SystemParameterList::entries_size() const {
  return entries_.size();
}
inline void SystemParameterList::clear_entries() {
  entries_.Clear();
}
inline const ::ecu::lapi::pb::SystemParameterEntry& SystemParameterList::entries(int index) const {
  // @@protoc_insertion_point(field_get:ecu.lapi.pb.SystemParameterList.entries)
  return entries_.Get(index);
}
inline ::ecu::lapi::pb::SystemParameterEntry* SystemParameterList::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:ecu.lapi.pb.SystemParameterList.entries)
  return entries_.Mutable(index);
}
inline ::ecu::lapi::pb::SystemParameterEntry* SystemParameterList::add_entries() {
  // @@protoc_insertion_point(field_add:ecu.lapi.pb.SystemParameterList.entries)
  return entries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ecu::lapi::pb::SystemParameterEntry >&
SystemParameterList::entries() const {
  // @@protoc_insertion_point(field_list:ecu.lapi.pb.SystemParameterList.entries)
  return entries_;
}
inline ::google::protobuf::RepeatedPtrField< ::ecu::lapi::pb::SystemParameterEntry >*
SystemParameterList::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:ecu.lapi.pb.SystemParameterList.entries)
  return &entries_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace lapi
}  // namespace ecu

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_variables_2eproto__INCLUDED
