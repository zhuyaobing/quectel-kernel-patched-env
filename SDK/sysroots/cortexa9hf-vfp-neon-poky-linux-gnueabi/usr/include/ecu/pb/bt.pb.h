// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bt.proto

#ifndef PROTOBUF_bt_2eproto__INCLUDED
#define PROTOBUF_bt_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ecu {
namespace lapi {
namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_bt_2eproto();
void protobuf_AssignDesc_bt_2eproto();
void protobuf_ShutdownFile_bt_2eproto();

class BtDevice;
class RpcRequest;
class RpcResponse;
class BtStatus;
class BtDiscoveryResults;
class BtDiscoveryRequest;
class BtDiscoveryResponse;

enum RpcResponse_Status {
  RpcResponse_Status_UNDEFINED = 0,
  RpcResponse_Status_OK = 1,
  RpcResponse_Status_ERROR = 2
};
bool RpcResponse_Status_IsValid(int value);
const RpcResponse_Status RpcResponse_Status_Status_MIN = RpcResponse_Status_UNDEFINED;
const RpcResponse_Status RpcResponse_Status_Status_MAX = RpcResponse_Status_ERROR;
const int RpcResponse_Status_Status_ARRAYSIZE = RpcResponse_Status_Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* RpcResponse_Status_descriptor();
inline const ::std::string& RpcResponse_Status_Name(RpcResponse_Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    RpcResponse_Status_descriptor(), value);
}
inline bool RpcResponse_Status_Parse(
    const ::std::string& name, RpcResponse_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RpcResponse_Status>(
    RpcResponse_Status_descriptor(), name, value);
}
enum BtStatus_Status {
  BtStatus_Status_UNAVAILABLE = 0,
  BtStatus_Status_AVAILABLE = 1,
  BtStatus_Status_OPERATIONAL = 2,
  BtStatus_Status_ERROR = 3
};
bool BtStatus_Status_IsValid(int value);
const BtStatus_Status BtStatus_Status_Status_MIN = BtStatus_Status_UNAVAILABLE;
const BtStatus_Status BtStatus_Status_Status_MAX = BtStatus_Status_ERROR;
const int BtStatus_Status_Status_ARRAYSIZE = BtStatus_Status_Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* BtStatus_Status_descriptor();
inline const ::std::string& BtStatus_Status_Name(BtStatus_Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    BtStatus_Status_descriptor(), value);
}
inline bool BtStatus_Status_Parse(
    const ::std::string& name, BtStatus_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BtStatus_Status>(
    BtStatus_Status_descriptor(), name, value);
}
enum BtDiscoveryResults_Status {
  BtDiscoveryResults_Status_UNDEFINED = 0,
  BtDiscoveryResults_Status_SUCCESS = 1,
  BtDiscoveryResults_Status_ERROR = 2,
  BtDiscoveryResults_Status_BUSY = 3
};
bool BtDiscoveryResults_Status_IsValid(int value);
const BtDiscoveryResults_Status BtDiscoveryResults_Status_Status_MIN = BtDiscoveryResults_Status_UNDEFINED;
const BtDiscoveryResults_Status BtDiscoveryResults_Status_Status_MAX = BtDiscoveryResults_Status_BUSY;
const int BtDiscoveryResults_Status_Status_ARRAYSIZE = BtDiscoveryResults_Status_Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* BtDiscoveryResults_Status_descriptor();
inline const ::std::string& BtDiscoveryResults_Status_Name(BtDiscoveryResults_Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    BtDiscoveryResults_Status_descriptor(), value);
}
inline bool BtDiscoveryResults_Status_Parse(
    const ::std::string& name, BtDiscoveryResults_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BtDiscoveryResults_Status>(
    BtDiscoveryResults_Status_descriptor(), name, value);
}
enum BtDiscoveryRequest_Action {
  BtDiscoveryRequest_Action_UNDEFINED = 0,
  BtDiscoveryRequest_Action_START = 1,
  BtDiscoveryRequest_Action_STOP = 2,
  BtDiscoveryRequest_Action_QUERY = 3
};
bool BtDiscoveryRequest_Action_IsValid(int value);
const BtDiscoveryRequest_Action BtDiscoveryRequest_Action_Action_MIN = BtDiscoveryRequest_Action_UNDEFINED;
const BtDiscoveryRequest_Action BtDiscoveryRequest_Action_Action_MAX = BtDiscoveryRequest_Action_QUERY;
const int BtDiscoveryRequest_Action_Action_ARRAYSIZE = BtDiscoveryRequest_Action_Action_MAX + 1;

const ::google::protobuf::EnumDescriptor* BtDiscoveryRequest_Action_descriptor();
inline const ::std::string& BtDiscoveryRequest_Action_Name(BtDiscoveryRequest_Action value) {
  return ::google::protobuf::internal::NameOfEnum(
    BtDiscoveryRequest_Action_descriptor(), value);
}
inline bool BtDiscoveryRequest_Action_Parse(
    const ::std::string& name, BtDiscoveryRequest_Action* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BtDiscoveryRequest_Action>(
    BtDiscoveryRequest_Action_descriptor(), name, value);
}
enum BtDiscoveryResponse_Status {
  BtDiscoveryResponse_Status_UNDEFINED = 0,
  BtDiscoveryResponse_Status_STARTED = 1,
  BtDiscoveryResponse_Status_STOPPED = 2
};
bool BtDiscoveryResponse_Status_IsValid(int value);
const BtDiscoveryResponse_Status BtDiscoveryResponse_Status_Status_MIN = BtDiscoveryResponse_Status_UNDEFINED;
const BtDiscoveryResponse_Status BtDiscoveryResponse_Status_Status_MAX = BtDiscoveryResponse_Status_STOPPED;
const int BtDiscoveryResponse_Status_Status_ARRAYSIZE = BtDiscoveryResponse_Status_Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* BtDiscoveryResponse_Status_descriptor();
inline const ::std::string& BtDiscoveryResponse_Status_Name(BtDiscoveryResponse_Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    BtDiscoveryResponse_Status_descriptor(), value);
}
inline bool BtDiscoveryResponse_Status_Parse(
    const ::std::string& name, BtDiscoveryResponse_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BtDiscoveryResponse_Status>(
    BtDiscoveryResponse_Status_descriptor(), name, value);
}
// ===================================================================

class BtDevice : public ::google::protobuf::Message {
 public:
  BtDevice();
  virtual ~BtDevice();

  BtDevice(const BtDevice& from);

  inline BtDevice& operator=(const BtDevice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BtDevice& default_instance();

  void Swap(BtDevice* other);

  // implements Message ----------------------------------------------

  BtDevice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BtDevice& from);
  void MergeFrom(const BtDevice& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string address = 1;
  inline bool has_address() const;
  inline void clear_address();
  static const int kAddressFieldNumber = 1;
  inline const ::std::string& address() const;
  inline void set_address(const ::std::string& value);
  inline void set_address(const char* value);
  inline void set_address(const char* value, size_t size);
  inline ::std::string* mutable_address();
  inline ::std::string* release_address();
  inline void set_allocated_address(::std::string* address);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 rssi = 3;
  inline bool has_rssi() const;
  inline void clear_rssi();
  static const int kRssiFieldNumber = 3;
  inline ::google::protobuf::int32 rssi() const;
  inline void set_rssi(::google::protobuf::int32 value);

  // optional bool paired = 4;
  inline bool has_paired() const;
  inline void clear_paired();
  static const int kPairedFieldNumber = 4;
  inline bool paired() const;
  inline void set_paired(bool value);

  // optional bool connected = 5;
  inline bool has_connected() const;
  inline void clear_connected();
  static const int kConnectedFieldNumber = 5;
  inline bool connected() const;
  inline void set_connected(bool value);

  // optional uint64 ts_discovered = 6;
  inline bool has_ts_discovered() const;
  inline void clear_ts_discovered();
  static const int kTsDiscoveredFieldNumber = 6;
  inline ::google::protobuf::uint64 ts_discovered() const;
  inline void set_ts_discovered(::google::protobuf::uint64 value);

  // optional uint64 ts_last_seen = 7;
  inline bool has_ts_last_seen() const;
  inline void clear_ts_last_seen();
  static const int kTsLastSeenFieldNumber = 7;
  inline ::google::protobuf::uint64 ts_last_seen() const;
  inline void set_ts_last_seen(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ecu.lapi.pb.BtDevice)
 private:
  inline void set_has_address();
  inline void clear_has_address();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_rssi();
  inline void clear_has_rssi();
  inline void set_has_paired();
  inline void clear_has_paired();
  inline void set_has_connected();
  inline void clear_has_connected();
  inline void set_has_ts_discovered();
  inline void clear_has_ts_discovered();
  inline void set_has_ts_last_seen();
  inline void clear_has_ts_last_seen();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* address_;
  ::std::string* name_;
  ::google::protobuf::int32 rssi_;
  bool paired_;
  bool connected_;
  ::google::protobuf::uint64 ts_discovered_;
  ::google::protobuf::uint64 ts_last_seen_;
  friend void  protobuf_AddDesc_bt_2eproto();
  friend void protobuf_AssignDesc_bt_2eproto();
  friend void protobuf_ShutdownFile_bt_2eproto();

  void InitAsDefaultInstance();
  static BtDevice* default_instance_;
};
// -------------------------------------------------------------------

class RpcRequest : public ::google::protobuf::Message {
 public:
  RpcRequest();
  virtual ~RpcRequest();

  RpcRequest(const RpcRequest& from);

  inline RpcRequest& operator=(const RpcRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RpcRequest& default_instance();

  void Swap(RpcRequest* other);

  // implements Message ----------------------------------------------

  RpcRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RpcRequest& from);
  void MergeFrom(const RpcRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 req_id = 1;
  inline bool has_req_id() const;
  inline void clear_req_id();
  static const int kReqIdFieldNumber = 1;
  inline ::google::protobuf::uint64 req_id() const;
  inline void set_req_id(::google::protobuf::uint64 value);

  // optional string client = 2;
  inline bool has_client() const;
  inline void clear_client();
  static const int kClientFieldNumber = 2;
  inline const ::std::string& client() const;
  inline void set_client(const ::std::string& value);
  inline void set_client(const char* value);
  inline void set_client(const char* value, size_t size);
  inline ::std::string* mutable_client();
  inline ::std::string* release_client();
  inline void set_allocated_client(::std::string* client);

  // @@protoc_insertion_point(class_scope:ecu.lapi.pb.RpcRequest)
 private:
  inline void set_has_req_id();
  inline void clear_has_req_id();
  inline void set_has_client();
  inline void clear_has_client();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 req_id_;
  ::std::string* client_;
  friend void  protobuf_AddDesc_bt_2eproto();
  friend void protobuf_AssignDesc_bt_2eproto();
  friend void protobuf_ShutdownFile_bt_2eproto();

  void InitAsDefaultInstance();
  static RpcRequest* default_instance_;
};
// -------------------------------------------------------------------

class RpcResponse : public ::google::protobuf::Message {
 public:
  RpcResponse();
  virtual ~RpcResponse();

  RpcResponse(const RpcResponse& from);

  inline RpcResponse& operator=(const RpcResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RpcResponse& default_instance();

  void Swap(RpcResponse* other);

  // implements Message ----------------------------------------------

  RpcResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RpcResponse& from);
  void MergeFrom(const RpcResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef RpcResponse_Status Status;
  static const Status UNDEFINED = RpcResponse_Status_UNDEFINED;
  static const Status OK = RpcResponse_Status_OK;
  static const Status ERROR = RpcResponse_Status_ERROR;
  static inline bool Status_IsValid(int value) {
    return RpcResponse_Status_IsValid(value);
  }
  static const Status Status_MIN =
    RpcResponse_Status_Status_MIN;
  static const Status Status_MAX =
    RpcResponse_Status_Status_MAX;
  static const int Status_ARRAYSIZE =
    RpcResponse_Status_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Status_descriptor() {
    return RpcResponse_Status_descriptor();
  }
  static inline const ::std::string& Status_Name(Status value) {
    return RpcResponse_Status_Name(value);
  }
  static inline bool Status_Parse(const ::std::string& name,
      Status* value) {
    return RpcResponse_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint64 req_id = 1;
  inline bool has_req_id() const;
  inline void clear_req_id();
  static const int kReqIdFieldNumber = 1;
  inline ::google::protobuf::uint64 req_id() const;
  inline void set_req_id(::google::protobuf::uint64 value);

  // optional .ecu.lapi.pb.RpcResponse.Status status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::ecu::lapi::pb::RpcResponse_Status status() const;
  inline void set_status(::ecu::lapi::pb::RpcResponse_Status value);

  // @@protoc_insertion_point(class_scope:ecu.lapi.pb.RpcResponse)
 private:
  inline void set_has_req_id();
  inline void clear_has_req_id();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 req_id_;
  int status_;
  friend void  protobuf_AddDesc_bt_2eproto();
  friend void protobuf_AssignDesc_bt_2eproto();
  friend void protobuf_ShutdownFile_bt_2eproto();

  void InitAsDefaultInstance();
  static RpcResponse* default_instance_;
};
// -------------------------------------------------------------------

class BtStatus : public ::google::protobuf::Message {
 public:
  BtStatus();
  virtual ~BtStatus();

  BtStatus(const BtStatus& from);

  inline BtStatus& operator=(const BtStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BtStatus& default_instance();

  void Swap(BtStatus* other);

  // implements Message ----------------------------------------------

  BtStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BtStatus& from);
  void MergeFrom(const BtStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BtStatus_Status Status;
  static const Status UNAVAILABLE = BtStatus_Status_UNAVAILABLE;
  static const Status AVAILABLE = BtStatus_Status_AVAILABLE;
  static const Status OPERATIONAL = BtStatus_Status_OPERATIONAL;
  static const Status ERROR = BtStatus_Status_ERROR;
  static inline bool Status_IsValid(int value) {
    return BtStatus_Status_IsValid(value);
  }
  static const Status Status_MIN =
    BtStatus_Status_Status_MIN;
  static const Status Status_MAX =
    BtStatus_Status_Status_MAX;
  static const int Status_ARRAYSIZE =
    BtStatus_Status_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Status_descriptor() {
    return BtStatus_Status_descriptor();
  }
  static inline const ::std::string& Status_Name(Status value) {
    return BtStatus_Status_Name(value);
  }
  static inline bool Status_Parse(const ::std::string& name,
      Status* value) {
    return BtStatus_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .ecu.lapi.pb.BtStatus.Status status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::ecu::lapi::pb::BtStatus_Status status() const;
  inline void set_status(::ecu::lapi::pb::BtStatus_Status value);

  // @@protoc_insertion_point(class_scope:ecu.lapi.pb.BtStatus)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int status_;
  friend void  protobuf_AddDesc_bt_2eproto();
  friend void protobuf_AssignDesc_bt_2eproto();
  friend void protobuf_ShutdownFile_bt_2eproto();

  void InitAsDefaultInstance();
  static BtStatus* default_instance_;
};
// -------------------------------------------------------------------

class BtDiscoveryResults : public ::google::protobuf::Message {
 public:
  BtDiscoveryResults();
  virtual ~BtDiscoveryResults();

  BtDiscoveryResults(const BtDiscoveryResults& from);

  inline BtDiscoveryResults& operator=(const BtDiscoveryResults& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BtDiscoveryResults& default_instance();

  void Swap(BtDiscoveryResults* other);

  // implements Message ----------------------------------------------

  BtDiscoveryResults* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BtDiscoveryResults& from);
  void MergeFrom(const BtDiscoveryResults& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BtDiscoveryResults_Status Status;
  static const Status UNDEFINED = BtDiscoveryResults_Status_UNDEFINED;
  static const Status SUCCESS = BtDiscoveryResults_Status_SUCCESS;
  static const Status ERROR = BtDiscoveryResults_Status_ERROR;
  static const Status BUSY = BtDiscoveryResults_Status_BUSY;
  static inline bool Status_IsValid(int value) {
    return BtDiscoveryResults_Status_IsValid(value);
  }
  static const Status Status_MIN =
    BtDiscoveryResults_Status_Status_MIN;
  static const Status Status_MAX =
    BtDiscoveryResults_Status_Status_MAX;
  static const int Status_ARRAYSIZE =
    BtDiscoveryResults_Status_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Status_descriptor() {
    return BtDiscoveryResults_Status_descriptor();
  }
  static inline const ::std::string& Status_Name(Status value) {
    return BtDiscoveryResults_Status_Name(value);
  }
  static inline bool Status_Parse(const ::std::string& name,
      Status* value) {
    return BtDiscoveryResults_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .ecu.lapi.pb.BtDiscoveryResults.Status status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::ecu::lapi::pb::BtDiscoveryResults_Status status() const;
  inline void set_status(::ecu::lapi::pb::BtDiscoveryResults_Status value);

  // repeated .ecu.lapi.pb.BtDevice devices = 2;
  inline int devices_size() const;
  inline void clear_devices();
  static const int kDevicesFieldNumber = 2;
  inline const ::ecu::lapi::pb::BtDevice& devices(int index) const;
  inline ::ecu::lapi::pb::BtDevice* mutable_devices(int index);
  inline ::ecu::lapi::pb::BtDevice* add_devices();
  inline const ::google::protobuf::RepeatedPtrField< ::ecu::lapi::pb::BtDevice >&
      devices() const;
  inline ::google::protobuf::RepeatedPtrField< ::ecu::lapi::pb::BtDevice >*
      mutable_devices();

  // @@protoc_insertion_point(class_scope:ecu.lapi.pb.BtDiscoveryResults)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ecu::lapi::pb::BtDevice > devices_;
  int status_;
  friend void  protobuf_AddDesc_bt_2eproto();
  friend void protobuf_AssignDesc_bt_2eproto();
  friend void protobuf_ShutdownFile_bt_2eproto();

  void InitAsDefaultInstance();
  static BtDiscoveryResults* default_instance_;
};
// -------------------------------------------------------------------

class BtDiscoveryRequest : public ::google::protobuf::Message {
 public:
  BtDiscoveryRequest();
  virtual ~BtDiscoveryRequest();

  BtDiscoveryRequest(const BtDiscoveryRequest& from);

  inline BtDiscoveryRequest& operator=(const BtDiscoveryRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BtDiscoveryRequest& default_instance();

  void Swap(BtDiscoveryRequest* other);

  // implements Message ----------------------------------------------

  BtDiscoveryRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BtDiscoveryRequest& from);
  void MergeFrom(const BtDiscoveryRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BtDiscoveryRequest_Action Action;
  static const Action UNDEFINED = BtDiscoveryRequest_Action_UNDEFINED;
  static const Action START = BtDiscoveryRequest_Action_START;
  static const Action STOP = BtDiscoveryRequest_Action_STOP;
  static const Action QUERY = BtDiscoveryRequest_Action_QUERY;
  static inline bool Action_IsValid(int value) {
    return BtDiscoveryRequest_Action_IsValid(value);
  }
  static const Action Action_MIN =
    BtDiscoveryRequest_Action_Action_MIN;
  static const Action Action_MAX =
    BtDiscoveryRequest_Action_Action_MAX;
  static const int Action_ARRAYSIZE =
    BtDiscoveryRequest_Action_Action_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Action_descriptor() {
    return BtDiscoveryRequest_Action_descriptor();
  }
  static inline const ::std::string& Action_Name(Action value) {
    return BtDiscoveryRequest_Action_Name(value);
  }
  static inline bool Action_Parse(const ::std::string& name,
      Action* value) {
    return BtDiscoveryRequest_Action_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .ecu.lapi.pb.RpcRequest rpc_req = 1;
  inline bool has_rpc_req() const;
  inline void clear_rpc_req();
  static const int kRpcReqFieldNumber = 1;
  inline const ::ecu::lapi::pb::RpcRequest& rpc_req() const;
  inline ::ecu::lapi::pb::RpcRequest* mutable_rpc_req();
  inline ::ecu::lapi::pb::RpcRequest* release_rpc_req();
  inline void set_allocated_rpc_req(::ecu::lapi::pb::RpcRequest* rpc_req);

  // optional .ecu.lapi.pb.BtDiscoveryRequest.Action action = 2;
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 2;
  inline ::ecu::lapi::pb::BtDiscoveryRequest_Action action() const;
  inline void set_action(::ecu::lapi::pb::BtDiscoveryRequest_Action value);

  // @@protoc_insertion_point(class_scope:ecu.lapi.pb.BtDiscoveryRequest)
 private:
  inline void set_has_rpc_req();
  inline void clear_has_rpc_req();
  inline void set_has_action();
  inline void clear_has_action();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ecu::lapi::pb::RpcRequest* rpc_req_;
  int action_;
  friend void  protobuf_AddDesc_bt_2eproto();
  friend void protobuf_AssignDesc_bt_2eproto();
  friend void protobuf_ShutdownFile_bt_2eproto();

  void InitAsDefaultInstance();
  static BtDiscoveryRequest* default_instance_;
};
// -------------------------------------------------------------------

class BtDiscoveryResponse : public ::google::protobuf::Message {
 public:
  BtDiscoveryResponse();
  virtual ~BtDiscoveryResponse();

  BtDiscoveryResponse(const BtDiscoveryResponse& from);

  inline BtDiscoveryResponse& operator=(const BtDiscoveryResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BtDiscoveryResponse& default_instance();

  void Swap(BtDiscoveryResponse* other);

  // implements Message ----------------------------------------------

  BtDiscoveryResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BtDiscoveryResponse& from);
  void MergeFrom(const BtDiscoveryResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BtDiscoveryResponse_Status Status;
  static const Status UNDEFINED = BtDiscoveryResponse_Status_UNDEFINED;
  static const Status STARTED = BtDiscoveryResponse_Status_STARTED;
  static const Status STOPPED = BtDiscoveryResponse_Status_STOPPED;
  static inline bool Status_IsValid(int value) {
    return BtDiscoveryResponse_Status_IsValid(value);
  }
  static const Status Status_MIN =
    BtDiscoveryResponse_Status_Status_MIN;
  static const Status Status_MAX =
    BtDiscoveryResponse_Status_Status_MAX;
  static const int Status_ARRAYSIZE =
    BtDiscoveryResponse_Status_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Status_descriptor() {
    return BtDiscoveryResponse_Status_descriptor();
  }
  static inline const ::std::string& Status_Name(Status value) {
    return BtDiscoveryResponse_Status_Name(value);
  }
  static inline bool Status_Parse(const ::std::string& name,
      Status* value) {
    return BtDiscoveryResponse_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .ecu.lapi.pb.RpcResponse rpc_res = 1;
  inline bool has_rpc_res() const;
  inline void clear_rpc_res();
  static const int kRpcResFieldNumber = 1;
  inline const ::ecu::lapi::pb::RpcResponse& rpc_res() const;
  inline ::ecu::lapi::pb::RpcResponse* mutable_rpc_res();
  inline ::ecu::lapi::pb::RpcResponse* release_rpc_res();
  inline void set_allocated_rpc_res(::ecu::lapi::pb::RpcResponse* rpc_res);

  // optional .ecu.lapi.pb.BtDiscoveryResponse.Status status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::ecu::lapi::pb::BtDiscoveryResponse_Status status() const;
  inline void set_status(::ecu::lapi::pb::BtDiscoveryResponse_Status value);

  // @@protoc_insertion_point(class_scope:ecu.lapi.pb.BtDiscoveryResponse)
 private:
  inline void set_has_rpc_res();
  inline void clear_has_rpc_res();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ecu::lapi::pb::RpcResponse* rpc_res_;
  int status_;
  friend void  protobuf_AddDesc_bt_2eproto();
  friend void protobuf_AssignDesc_bt_2eproto();
  friend void protobuf_ShutdownFile_bt_2eproto();

  void InitAsDefaultInstance();
  static BtDiscoveryResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// BtDevice

// optional string address = 1;
inline bool BtDevice::has_address() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BtDevice::set_has_address() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BtDevice::clear_has_address() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BtDevice::clear_address() {
  if (address_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    address_->clear();
  }
  clear_has_address();
}
inline const ::std::string& BtDevice::address() const {
  // @@protoc_insertion_point(field_get:ecu.lapi.pb.BtDevice.address)
  return *address_;
}
inline void BtDevice::set_address(const ::std::string& value) {
  set_has_address();
  if (address_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    address_ = new ::std::string;
  }
  address_->assign(value);
  // @@protoc_insertion_point(field_set:ecu.lapi.pb.BtDevice.address)
}
inline void BtDevice::set_address(const char* value) {
  set_has_address();
  if (address_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    address_ = new ::std::string;
  }
  address_->assign(value);
  // @@protoc_insertion_point(field_set_char:ecu.lapi.pb.BtDevice.address)
}
inline void BtDevice::set_address(const char* value, size_t size) {
  set_has_address();
  if (address_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    address_ = new ::std::string;
  }
  address_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ecu.lapi.pb.BtDevice.address)
}
inline ::std::string* BtDevice::mutable_address() {
  set_has_address();
  if (address_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    address_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ecu.lapi.pb.BtDevice.address)
  return address_;
}
inline ::std::string* BtDevice::release_address() {
  clear_has_address();
  if (address_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = address_;
    address_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BtDevice::set_allocated_address(::std::string* address) {
  if (address_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete address_;
  }
  if (address) {
    set_has_address();
    address_ = address;
  } else {
    clear_has_address();
    address_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ecu.lapi.pb.BtDevice.address)
}

// optional string name = 2;
inline bool BtDevice::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BtDevice::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BtDevice::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BtDevice::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& BtDevice::name() const {
  // @@protoc_insertion_point(field_get:ecu.lapi.pb.BtDevice.name)
  return *name_;
}
inline void BtDevice::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:ecu.lapi.pb.BtDevice.name)
}
inline void BtDevice::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:ecu.lapi.pb.BtDevice.name)
}
inline void BtDevice::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ecu.lapi.pb.BtDevice.name)
}
inline ::std::string* BtDevice::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ecu.lapi.pb.BtDevice.name)
  return name_;
}
inline ::std::string* BtDevice::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void BtDevice::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ecu.lapi.pb.BtDevice.name)
}

// optional int32 rssi = 3;
inline bool BtDevice::has_rssi() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BtDevice::set_has_rssi() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BtDevice::clear_has_rssi() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BtDevice::clear_rssi() {
  rssi_ = 0;
  clear_has_rssi();
}
inline ::google::protobuf::int32 BtDevice::rssi() const {
  // @@protoc_insertion_point(field_get:ecu.lapi.pb.BtDevice.rssi)
  return rssi_;
}
inline void BtDevice::set_rssi(::google::protobuf::int32 value) {
  set_has_rssi();
  rssi_ = value;
  // @@protoc_insertion_point(field_set:ecu.lapi.pb.BtDevice.rssi)
}

// optional bool paired = 4;
inline bool BtDevice::has_paired() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BtDevice::set_has_paired() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BtDevice::clear_has_paired() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BtDevice::clear_paired() {
  paired_ = false;
  clear_has_paired();
}
inline bool BtDevice::paired() const {
  // @@protoc_insertion_point(field_get:ecu.lapi.pb.BtDevice.paired)
  return paired_;
}
inline void BtDevice::set_paired(bool value) {
  set_has_paired();
  paired_ = value;
  // @@protoc_insertion_point(field_set:ecu.lapi.pb.BtDevice.paired)
}

// optional bool connected = 5;
inline bool BtDevice::has_connected() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BtDevice::set_has_connected() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BtDevice::clear_has_connected() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BtDevice::clear_connected() {
  connected_ = false;
  clear_has_connected();
}
inline bool BtDevice::connected() const {
  // @@protoc_insertion_point(field_get:ecu.lapi.pb.BtDevice.connected)
  return connected_;
}
inline void BtDevice::set_connected(bool value) {
  set_has_connected();
  connected_ = value;
  // @@protoc_insertion_point(field_set:ecu.lapi.pb.BtDevice.connected)
}

// optional uint64 ts_discovered = 6;
inline bool BtDevice::has_ts_discovered() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BtDevice::set_has_ts_discovered() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BtDevice::clear_has_ts_discovered() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BtDevice::clear_ts_discovered() {
  ts_discovered_ = GOOGLE_ULONGLONG(0);
  clear_has_ts_discovered();
}
inline ::google::protobuf::uint64 BtDevice::ts_discovered() const {
  // @@protoc_insertion_point(field_get:ecu.lapi.pb.BtDevice.ts_discovered)
  return ts_discovered_;
}
inline void BtDevice::set_ts_discovered(::google::protobuf::uint64 value) {
  set_has_ts_discovered();
  ts_discovered_ = value;
  // @@protoc_insertion_point(field_set:ecu.lapi.pb.BtDevice.ts_discovered)
}

// optional uint64 ts_last_seen = 7;
inline bool BtDevice::has_ts_last_seen() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BtDevice::set_has_ts_last_seen() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BtDevice::clear_has_ts_last_seen() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BtDevice::clear_ts_last_seen() {
  ts_last_seen_ = GOOGLE_ULONGLONG(0);
  clear_has_ts_last_seen();
}
inline ::google::protobuf::uint64 BtDevice::ts_last_seen() const {
  // @@protoc_insertion_point(field_get:ecu.lapi.pb.BtDevice.ts_last_seen)
  return ts_last_seen_;
}
inline void BtDevice::set_ts_last_seen(::google::protobuf::uint64 value) {
  set_has_ts_last_seen();
  ts_last_seen_ = value;
  // @@protoc_insertion_point(field_set:ecu.lapi.pb.BtDevice.ts_last_seen)
}

// -------------------------------------------------------------------

// RpcRequest

// optional uint64 req_id = 1;
inline bool RpcRequest::has_req_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RpcRequest::set_has_req_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RpcRequest::clear_has_req_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RpcRequest::clear_req_id() {
  req_id_ = GOOGLE_ULONGLONG(0);
  clear_has_req_id();
}
inline ::google::protobuf::uint64 RpcRequest::req_id() const {
  // @@protoc_insertion_point(field_get:ecu.lapi.pb.RpcRequest.req_id)
  return req_id_;
}
inline void RpcRequest::set_req_id(::google::protobuf::uint64 value) {
  set_has_req_id();
  req_id_ = value;
  // @@protoc_insertion_point(field_set:ecu.lapi.pb.RpcRequest.req_id)
}

// optional string client = 2;
inline bool RpcRequest::has_client() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RpcRequest::set_has_client() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RpcRequest::clear_has_client() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RpcRequest::clear_client() {
  if (client_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    client_->clear();
  }
  clear_has_client();
}
inline const ::std::string& RpcRequest::client() const {
  // @@protoc_insertion_point(field_get:ecu.lapi.pb.RpcRequest.client)
  return *client_;
}
inline void RpcRequest::set_client(const ::std::string& value) {
  set_has_client();
  if (client_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    client_ = new ::std::string;
  }
  client_->assign(value);
  // @@protoc_insertion_point(field_set:ecu.lapi.pb.RpcRequest.client)
}
inline void RpcRequest::set_client(const char* value) {
  set_has_client();
  if (client_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    client_ = new ::std::string;
  }
  client_->assign(value);
  // @@protoc_insertion_point(field_set_char:ecu.lapi.pb.RpcRequest.client)
}
inline void RpcRequest::set_client(const char* value, size_t size) {
  set_has_client();
  if (client_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    client_ = new ::std::string;
  }
  client_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ecu.lapi.pb.RpcRequest.client)
}
inline ::std::string* RpcRequest::mutable_client() {
  set_has_client();
  if (client_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    client_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ecu.lapi.pb.RpcRequest.client)
  return client_;
}
inline ::std::string* RpcRequest::release_client() {
  clear_has_client();
  if (client_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = client_;
    client_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RpcRequest::set_allocated_client(::std::string* client) {
  if (client_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete client_;
  }
  if (client) {
    set_has_client();
    client_ = client;
  } else {
    clear_has_client();
    client_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ecu.lapi.pb.RpcRequest.client)
}

// -------------------------------------------------------------------

// RpcResponse

// optional uint64 req_id = 1;
inline bool RpcResponse::has_req_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RpcResponse::set_has_req_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RpcResponse::clear_has_req_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RpcResponse::clear_req_id() {
  req_id_ = GOOGLE_ULONGLONG(0);
  clear_has_req_id();
}
inline ::google::protobuf::uint64 RpcResponse::req_id() const {
  // @@protoc_insertion_point(field_get:ecu.lapi.pb.RpcResponse.req_id)
  return req_id_;
}
inline void RpcResponse::set_req_id(::google::protobuf::uint64 value) {
  set_has_req_id();
  req_id_ = value;
  // @@protoc_insertion_point(field_set:ecu.lapi.pb.RpcResponse.req_id)
}

// optional .ecu.lapi.pb.RpcResponse.Status status = 2;
inline bool RpcResponse::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RpcResponse::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RpcResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RpcResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::ecu::lapi::pb::RpcResponse_Status RpcResponse::status() const {
  // @@protoc_insertion_point(field_get:ecu.lapi.pb.RpcResponse.status)
  return static_cast< ::ecu::lapi::pb::RpcResponse_Status >(status_);
}
inline void RpcResponse::set_status(::ecu::lapi::pb::RpcResponse_Status value) {
  assert(::ecu::lapi::pb::RpcResponse_Status_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:ecu.lapi.pb.RpcResponse.status)
}

// -------------------------------------------------------------------

// BtStatus

// optional .ecu.lapi.pb.BtStatus.Status status = 1;
inline bool BtStatus::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BtStatus::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BtStatus::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BtStatus::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::ecu::lapi::pb::BtStatus_Status BtStatus::status() const {
  // @@protoc_insertion_point(field_get:ecu.lapi.pb.BtStatus.status)
  return static_cast< ::ecu::lapi::pb::BtStatus_Status >(status_);
}
inline void BtStatus::set_status(::ecu::lapi::pb::BtStatus_Status value) {
  assert(::ecu::lapi::pb::BtStatus_Status_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:ecu.lapi.pb.BtStatus.status)
}

// -------------------------------------------------------------------

// BtDiscoveryResults

// optional .ecu.lapi.pb.BtDiscoveryResults.Status status = 1;
inline bool BtDiscoveryResults::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BtDiscoveryResults::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BtDiscoveryResults::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BtDiscoveryResults::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::ecu::lapi::pb::BtDiscoveryResults_Status BtDiscoveryResults::status() const {
  // @@protoc_insertion_point(field_get:ecu.lapi.pb.BtDiscoveryResults.status)
  return static_cast< ::ecu::lapi::pb::BtDiscoveryResults_Status >(status_);
}
inline void BtDiscoveryResults::set_status(::ecu::lapi::pb::BtDiscoveryResults_Status value) {
  assert(::ecu::lapi::pb::BtDiscoveryResults_Status_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:ecu.lapi.pb.BtDiscoveryResults.status)
}

// repeated .ecu.lapi.pb.BtDevice devices = 2;
inline int BtDiscoveryResults::devices_size() const {
  return devices_.size();
}
inline void BtDiscoveryResults::clear_devices() {
  devices_.Clear();
}
inline const ::ecu::lapi::pb::BtDevice& BtDiscoveryResults::devices(int index) const {
  // @@protoc_insertion_point(field_get:ecu.lapi.pb.BtDiscoveryResults.devices)
  return devices_.Get(index);
}
inline ::ecu::lapi::pb::BtDevice* BtDiscoveryResults::mutable_devices(int index) {
  // @@protoc_insertion_point(field_mutable:ecu.lapi.pb.BtDiscoveryResults.devices)
  return devices_.Mutable(index);
}
inline ::ecu::lapi::pb::BtDevice* BtDiscoveryResults::add_devices() {
  // @@protoc_insertion_point(field_add:ecu.lapi.pb.BtDiscoveryResults.devices)
  return devices_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ecu::lapi::pb::BtDevice >&
BtDiscoveryResults::devices() const {
  // @@protoc_insertion_point(field_list:ecu.lapi.pb.BtDiscoveryResults.devices)
  return devices_;
}
inline ::google::protobuf::RepeatedPtrField< ::ecu::lapi::pb::BtDevice >*
BtDiscoveryResults::mutable_devices() {
  // @@protoc_insertion_point(field_mutable_list:ecu.lapi.pb.BtDiscoveryResults.devices)
  return &devices_;
}

// -------------------------------------------------------------------

// BtDiscoveryRequest

// optional .ecu.lapi.pb.RpcRequest rpc_req = 1;
inline bool BtDiscoveryRequest::has_rpc_req() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BtDiscoveryRequest::set_has_rpc_req() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BtDiscoveryRequest::clear_has_rpc_req() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BtDiscoveryRequest::clear_rpc_req() {
  if (rpc_req_ != NULL) rpc_req_->::ecu::lapi::pb::RpcRequest::Clear();
  clear_has_rpc_req();
}
inline const ::ecu::lapi::pb::RpcRequest& BtDiscoveryRequest::rpc_req() const {
  // @@protoc_insertion_point(field_get:ecu.lapi.pb.BtDiscoveryRequest.rpc_req)
  return rpc_req_ != NULL ? *rpc_req_ : *default_instance_->rpc_req_;
}
inline ::ecu::lapi::pb::RpcRequest* BtDiscoveryRequest::mutable_rpc_req() {
  set_has_rpc_req();
  if (rpc_req_ == NULL) rpc_req_ = new ::ecu::lapi::pb::RpcRequest;
  // @@protoc_insertion_point(field_mutable:ecu.lapi.pb.BtDiscoveryRequest.rpc_req)
  return rpc_req_;
}
inline ::ecu::lapi::pb::RpcRequest* BtDiscoveryRequest::release_rpc_req() {
  clear_has_rpc_req();
  ::ecu::lapi::pb::RpcRequest* temp = rpc_req_;
  rpc_req_ = NULL;
  return temp;
}
inline void BtDiscoveryRequest::set_allocated_rpc_req(::ecu::lapi::pb::RpcRequest* rpc_req) {
  delete rpc_req_;
  rpc_req_ = rpc_req;
  if (rpc_req) {
    set_has_rpc_req();
  } else {
    clear_has_rpc_req();
  }
  // @@protoc_insertion_point(field_set_allocated:ecu.lapi.pb.BtDiscoveryRequest.rpc_req)
}

// optional .ecu.lapi.pb.BtDiscoveryRequest.Action action = 2;
inline bool BtDiscoveryRequest::has_action() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BtDiscoveryRequest::set_has_action() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BtDiscoveryRequest::clear_has_action() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BtDiscoveryRequest::clear_action() {
  action_ = 0;
  clear_has_action();
}
inline ::ecu::lapi::pb::BtDiscoveryRequest_Action BtDiscoveryRequest::action() const {
  // @@protoc_insertion_point(field_get:ecu.lapi.pb.BtDiscoveryRequest.action)
  return static_cast< ::ecu::lapi::pb::BtDiscoveryRequest_Action >(action_);
}
inline void BtDiscoveryRequest::set_action(::ecu::lapi::pb::BtDiscoveryRequest_Action value) {
  assert(::ecu::lapi::pb::BtDiscoveryRequest_Action_IsValid(value));
  set_has_action();
  action_ = value;
  // @@protoc_insertion_point(field_set:ecu.lapi.pb.BtDiscoveryRequest.action)
}

// -------------------------------------------------------------------

// BtDiscoveryResponse

// optional .ecu.lapi.pb.RpcResponse rpc_res = 1;
inline bool BtDiscoveryResponse::has_rpc_res() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BtDiscoveryResponse::set_has_rpc_res() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BtDiscoveryResponse::clear_has_rpc_res() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BtDiscoveryResponse::clear_rpc_res() {
  if (rpc_res_ != NULL) rpc_res_->::ecu::lapi::pb::RpcResponse::Clear();
  clear_has_rpc_res();
}
inline const ::ecu::lapi::pb::RpcResponse& BtDiscoveryResponse::rpc_res() const {
  // @@protoc_insertion_point(field_get:ecu.lapi.pb.BtDiscoveryResponse.rpc_res)
  return rpc_res_ != NULL ? *rpc_res_ : *default_instance_->rpc_res_;
}
inline ::ecu::lapi::pb::RpcResponse* BtDiscoveryResponse::mutable_rpc_res() {
  set_has_rpc_res();
  if (rpc_res_ == NULL) rpc_res_ = new ::ecu::lapi::pb::RpcResponse;
  // @@protoc_insertion_point(field_mutable:ecu.lapi.pb.BtDiscoveryResponse.rpc_res)
  return rpc_res_;
}
inline ::ecu::lapi::pb::RpcResponse* BtDiscoveryResponse::release_rpc_res() {
  clear_has_rpc_res();
  ::ecu::lapi::pb::RpcResponse* temp = rpc_res_;
  rpc_res_ = NULL;
  return temp;
}
inline void BtDiscoveryResponse::set_allocated_rpc_res(::ecu::lapi::pb::RpcResponse* rpc_res) {
  delete rpc_res_;
  rpc_res_ = rpc_res;
  if (rpc_res) {
    set_has_rpc_res();
  } else {
    clear_has_rpc_res();
  }
  // @@protoc_insertion_point(field_set_allocated:ecu.lapi.pb.BtDiscoveryResponse.rpc_res)
}

// optional .ecu.lapi.pb.BtDiscoveryResponse.Status status = 2;
inline bool BtDiscoveryResponse::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BtDiscoveryResponse::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BtDiscoveryResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BtDiscoveryResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::ecu::lapi::pb::BtDiscoveryResponse_Status BtDiscoveryResponse::status() const {
  // @@protoc_insertion_point(field_get:ecu.lapi.pb.BtDiscoveryResponse.status)
  return static_cast< ::ecu::lapi::pb::BtDiscoveryResponse_Status >(status_);
}
inline void BtDiscoveryResponse::set_status(::ecu::lapi::pb::BtDiscoveryResponse_Status value) {
  assert(::ecu::lapi::pb::BtDiscoveryResponse_Status_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:ecu.lapi.pb.BtDiscoveryResponse.status)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace lapi
}  // namespace ecu

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ecu::lapi::pb::RpcResponse_Status> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ecu::lapi::pb::RpcResponse_Status>() {
  return ::ecu::lapi::pb::RpcResponse_Status_descriptor();
}
template <> struct is_proto_enum< ::ecu::lapi::pb::BtStatus_Status> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ecu::lapi::pb::BtStatus_Status>() {
  return ::ecu::lapi::pb::BtStatus_Status_descriptor();
}
template <> struct is_proto_enum< ::ecu::lapi::pb::BtDiscoveryResults_Status> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ecu::lapi::pb::BtDiscoveryResults_Status>() {
  return ::ecu::lapi::pb::BtDiscoveryResults_Status_descriptor();
}
template <> struct is_proto_enum< ::ecu::lapi::pb::BtDiscoveryRequest_Action> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ecu::lapi::pb::BtDiscoveryRequest_Action>() {
  return ::ecu::lapi::pb::BtDiscoveryRequest_Action_descriptor();
}
template <> struct is_proto_enum< ::ecu::lapi::pb::BtDiscoveryResponse_Status> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ecu::lapi::pb::BtDiscoveryResponse_Status>() {
  return ::ecu::lapi::pb::BtDiscoveryResponse_Status_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_bt_2eproto__INCLUDED
